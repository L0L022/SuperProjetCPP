var annotated =
[
    [ "boost", "namespaceboost.html", "namespaceboost" ],
    [ "common_layer", null, [
      [ "const_string", "classcommon__layer_1_1const__string.html", "classcommon__layer_1_1const__string" ],
      [ "first_char", "classcommon__layer_1_1first__char.html", "classcommon__layer_1_1first__char" ],
      [ "last_char", "classcommon__layer_1_1last__char.html", "classcommon__layer_1_1last__char" ]
    ] ],
    [ "ns", null, [
      [ "X", "structns_1_1_x.html", null ]
    ] ],
    [ "printing_test", null, [
      [ "user_defined_type", "structprinting__test_1_1user__defined__type.html", "structprinting__test_1_1user__defined__type" ]
    ] ],
    [ "test_noncopyable_arg", null, [
      [ "NC", "structtest__noncopyable__arg_1_1_n_c.html", "structtest__noncopyable__arg_1_1_n_c" ]
    ] ],
    [ "user_defined_namespace", null, [
      [ "user_defined_type", "structuser__defined__namespace_1_1user__defined__type.html", "structuser__defined__namespace_1_1user__defined__type" ]
    ] ],
    [ "_2suites_4_cases", "struct__2suites__4__cases.html", "struct__2suites__4__cases" ],
    [ "_3cases", "struct__3cases.html", "struct__3cases" ],
    [ "A", "struct_a.html", "struct_a" ],
    [ "account", "structaccount.html", "structaccount" ],
    [ "account_test", "structaccount__test.html", "structaccount__test" ],
    [ "account_test_suite", "structaccount__test__suite.html", "structaccount__test__suite" ],
    [ "B", "struct_b.html", "struct_b" ],
    [ "bool_convertible", "classbool__convertible.html", "classbool__convertible" ],
    [ "C", "struct_c.html", "struct_c" ],
    [ "Canvas", "class_canvas.html", "class_canvas" ],
    [ "check_arg_type", "structcheck__arg__type.html", "structcheck__arg__type" ],
    [ "check_arg_type< std::tuple< T1, T2 > >", "structcheck__arg__type_3_01std_1_1tuple_3_01_t1_00_01_t2_01_4_01_4.html", "structcheck__arg__type_3_01std_1_1tuple_3_01_t1_00_01_t2_01_4_01_4" ],
    [ "check_arg_type< std::tuple< T1, T2, T3 > >", "structcheck__arg__type_3_01std_1_1tuple_3_01_t1_00_01_t2_00_01_t3_01_4_01_4.html", "structcheck__arg__type_3_01std_1_1tuple_3_01_t1_00_01_t2_00_01_t3_01_4_01_4" ],
    [ "check_arg_type_like", "structcheck__arg__type__like.html", "structcheck__arg__type__like" ],
    [ "check_arg_type_like< std::tuple< T1, T2 > >", "structcheck__arg__type__like_3_01std_1_1tuple_3_01_t1_00_01_t2_01_4_01_4.html", "structcheck__arg__type__like_3_01std_1_1tuple_3_01_t1_00_01_t2_01_4_01_4" ],
    [ "check_arg_type_like< std::tuple< T1, T2, T3 > >", "structcheck__arg__type__like_3_01std_1_1tuple_3_01_t1_00_01_t2_00_01_t3_01_4_01_4.html", "structcheck__arg__type__like_3_01std_1_1tuple_3_01_t1_00_01_t2_00_01_t3_01_4_01_4" ],
    [ "ci_comp", "structci__comp.html", "structci__comp" ],
    [ "Color", "class_color.html", "class_color" ],
    [ "const_string", "classconst__string.html", "classconst__string" ],
    [ "copy_count", "classcopy__count.html", "classcopy__count" ],
    [ "copy_counter", "structcopy__counter.html", "structcopy__counter" ],
    [ "D", "struct_d.html", "struct_d" ],
    [ "dummy_class", "structdummy__class.html", "structdummy__class" ],
    [ "E", "struct_e.html", "struct_e" ],
    [ "Event", "class_event.html", "class_event" ],
    [ "expected_call_count", "structexpected__call__count.html", "structexpected__call__count" ],
    [ "EZDraw", "class_e_z_draw.html", "class_e_z_draw" ],
    [ "EZEvent", "class_e_z_event.html", "class_e_z_event" ],
    [ "EZImage", "class_e_z_image.html", "class_e_z_image" ],
    [ "EZPixel", "class_e_z_pixel.html", "class_e_z_pixel" ],
    [ "EZPixmap", "class_e_z_pixmap.html", "class_e_z_pixmap" ],
    [ "EZWindow", "class_e_z_window.html", "class_e_z_window" ],
    [ "F", "struct_f.html", "struct_f" ],
    [ "F1", "struct_f1.html", "struct_f1" ],
    [ "F2", "struct_f2.html", "struct_f2" ],
    [ "fibonacci_dataset", "classfibonacci__dataset.html", "classfibonacci__dataset" ],
    [ "FileWordHistogram", "class_file_word_histogram.html", "class_file_word_histogram" ],
    [ "Font", "class_font.html", "class_font" ],
    [ "FooType", "class_foo_type.html", "class_foo_type" ],
    [ "forwarded_to_collection", "structforwarded__to__collection.html", null ],
    [ "forwarded_to_collection< data::monomorphic::collection< T > >", "structforwarded__to__collection_3_01data_1_1monomorphic_1_1collection_3_01_t_01_4_01_4.html", null ],
    [ "Fx", "struct_fx.html", "struct_fx" ],
    [ "GraphicsAnchor", "class_graphics_anchor.html", "class_graphics_anchor" ],
    [ "GraphicsAnimation", "class_graphics_animation.html", "class_graphics_animation" ],
    [ "GraphicsBlinkAnimation", "class_graphics_blink_animation.html", "class_graphics_blink_animation" ],
    [ "GraphicsCircle", "class_graphics_circle.html", "class_graphics_circle" ],
    [ "GraphicsEllipse", "class_graphics_ellipse.html", "class_graphics_ellipse" ],
    [ "GraphicsItem", "class_graphics_item.html", "class_graphics_item" ],
    [ "GraphicsLine", "class_graphics_line.html", "class_graphics_line" ],
    [ "GraphicsPoint", "class_graphics_point.html", "class_graphics_point" ],
    [ "GraphicsPolygon", "class_graphics_polygon.html", "class_graphics_polygon" ],
    [ "GraphicsRectangle", "class_graphics_rectangle.html", "class_graphics_rectangle" ],
    [ "GraphicsShape", "class_graphics_shape.html", "class_graphics_shape" ],
    [ "GraphicsSquare", "class_graphics_square.html", "class_graphics_square" ],
    [ "GraphicsText", "class_graphics_text.html", "class_graphics_text" ],
    [ "GraphicsTriangle", "class_graphics_triangle.html", "class_graphics_triangle" ],
    [ "guard", "structguard.html", "structguard" ],
    [ "hash_function", "classhash__function.html", "classhash__function" ],
    [ "hash_function_test_data", "structhash__function__test__data.html", "structhash__function__test__data" ],
    [ "hash_function_tester", "classhash__function__tester.html", "classhash__function__tester" ],
    [ "if_either", "structif__either.html", "structif__either" ],
    [ "invocation_count", "structinvocation__count.html", "structinvocation__count" ],
    [ "KeyEvent", "class_key_event.html", "class_key_event" ],
    [ "local_exception", "structlocal__exception.html", null ],
    [ "log_guard", "structlog__guard.html", "structlog__guard" ],
    [ "MainWindow", "class_main_window.html", "class_main_window" ],
    [ "massive_hash_function_test", "structmassive__hash__function__test.html", "structmassive__hash__function__test" ],
    [ "MouseEvent", "class_mouse_event.html", "class_mouse_event" ],
    [ "my_exception", "classmy__exception.html", "classmy__exception" ],
    [ "my_exception1", "structmy__exception1.html", "structmy__exception1" ],
    [ "my_exception2", "structmy__exception2.html", "structmy__exception2" ],
    [ "my_struct", "structmy__struct.html", "structmy__struct" ],
    [ "MyConfig", "struct_my_config.html", "struct_my_config" ],
    [ "MyConfig2", "struct_my_config2.html", "struct_my_config2" ],
    [ "myreg", "structmyreg.html", "structmyreg" ],
    [ "NC", "class_n_c.html", "class_n_c" ],
    [ "non_copyable_type", "classnon__copyable__type.html", "classnon__copyable__type" ],
    [ "not_fwd_iterable_1", "structnot__fwd__iterable__1.html", "structnot__fwd__iterable__1" ],
    [ "not_fwd_iterable_2", "structnot__fwd__iterable__2.html", "structnot__fwd__iterable__2" ],
    [ "not_fwd_iterable_3", "structnot__fwd__iterable__3.html", "structnot__fwd__iterable__3" ],
    [ "output_test_stream_for_loggers", "classoutput__test__stream__for__loggers.html", "classoutput__test__stream__for__loggers" ],
    [ "Point", "class_point.html", "class_point" ],
    [ "power_of_10", "structpower__of__10.html", "structpower__of__10" ],
    [ "power_of_10< 0 >", "structpower__of__10_3_010_01_4.html", "structpower__of__10_3_010_01_4" ],
    [ "print_sample", "structprint__sample.html", "structprint__sample" ],
    [ "Processor", "struct_processor.html", "struct_processor" ],
    [ "rv_erasure_test", "structrv__erasure__test.html", "structrv__erasure__test" ],
    [ "ScientificNotationExponentOutputNormalizer", "struct_scientific_notation_exponent_output_normalizer.html", null ],
    [ "SharedFixture", "struct_shared_fixture.html", "struct_shared_fixture" ],
    [ "shorten_lf", "structshorten__lf.html", "structshorten__lf" ],
    [ "string_literal", "structstring__literal.html", "structstring__literal" ],
    [ "suite_fixture", "structsuite__fixture.html", "structsuite__fixture" ],
    [ "suite_fixture2", "structsuite__fixture2.html", "structsuite__fixture2" ],
    [ "test_class", "classtest__class.html", "classtest__class" ],
    [ "test_main_caller", "structtest__main__caller.html", "structtest__main__caller" ],
    [ "test_tree", "structtest__tree.html", "structtest__tree" ],
    [ "Testee", "struct_testee.html", "struct_testee" ],
    [ "ToolsWindows", "class_tools_windows.html", "class_tools_windows" ],
    [ "tu_order_collector", "structtu__order__collector.html", "structtu__order__collector" ],
    [ "Window", "class_window.html", "class_window" ]
];